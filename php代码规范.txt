1. 每个文件必须是一个类

2. 每个类的函数必须指明 protected public private 属性，__construct() 函数除外

3. 每个类必须添加文档性注释如下所示：
    /**
     * 这是一个文档性注释
     **/
    public function testFunction() {
        ;
    }

4. 对于具体语句的注释，必须在这一句的上一行添加，如下所示：
    // 这是对一行语句的注释
    $a = $a + $b;

5. 对于具有特定功能的代码块，需要和其他行的代码空一行分开，添加代码块注释：
    $a = 9;
    $b = 0;

    // 交换两个数 $a 和 $b
    $temp = $a;
    $a = $b;
    $b = $temp
    
    echo $a . ' ' . $b;

6. 关于语句注释和代码块注释的细节： '//' 和注释内容之间必须有一个空格，如上 4 和 5 的例子所示，每个英文单词和数字前后必须有一个空格，如上 4 和 5 所示

7. 每个类的注释必须指明类的创建者，创建时间，格式如下：
    /**
     * 此类用于用户登陆的相关操作
     * @since 2013-1-19 13:02
     * @author FarmerJian<chengfeng1992@hotmail.com>
     **/
     class Login extends CI_Controller {
        ;
     }

8. 变量的命名遵从驼峰规则，不能随便缩写单词，常用的缩写如下：
    comment      cmt
    count        cnt
    index        idx
    infomation   info
    ...          ...

9. 函数的命名通过杨遵从驼峰规则，不同的是，procted 和 private 函数需要在名字前面加上 '_'

10. 同样遵从驼峰规则，不同的是，首字母必须大写

11. 文件的命名和 c 的命名一样，使用 '_' 分开不同的单词例如： user_info

12. if 语句的格式参考如下：
    if ($a < 10）{
        $b = 100;
    } else {
        $b = 200;
    }
    即，'if' 和之后的括号之间必须有一个空格，括号和后面的 '{' 之间必须有一个空格，'else' 和前后的 '}' '{' 之间必须有一个空格

13. for 语句的格式参考如下：
    for ($i = 0, $len = (int)count($array); $i < $len; $i ++) {
        $a = 10;
    }
    即：'for' 和之后的括号之间必须有一个空格，括号和后面 '{' 之间必须有一个空格

14. 类中不能轻易使用 private 函数，最好是 protected 和 public
